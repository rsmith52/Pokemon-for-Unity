using System;
using System.Collections.Generic;
using Battle;
using UnityEngine;
using Utilities;

namespace Pokemon
{
    #region Enums

    public enum Moves
    {
        None,
        Absorb,
        AcidArmor,
        AcidSpray,
        Acid,
        Acrobatics,
        Acupressure,
        AerialAce,
        Aeroblast,
        AfterYou,
        Agility,
        AirCutter,
        AirSlash,
        AllySwitch,
        Amnesia,
        AncientPower,
        AquaJet,
        AquaRing,
        AquaTail,
        ArmThrust,
        Aromatherapy,
        Assist,
        Assurance,
        Astonish,
        AttackOrder,
        Attract,
        AuraSphere,
        AuroraBeam,
        Autotomize,
        Avalanche,
        Barrage,
        Barrier,
        BatonPass,
        BeatUp,
        BellyDrum,
        Bestow,
        Bide,
        Bind,
        Bite,
        BlastBurn,
        BlazeKick,
        Blizzard,
        Block,
        BlueFlare,
        BodySlam,
        BoltStrike,
        BoneClub,
        BoneRush,
        Bonemerang,
        Bounce,
        BraveBird,
        BrickBreak,
        Brine,
        BubbleBeam,
        Bubble,
        BugBite,
        BugBuzz,
        BulkUp,
        Bulldoze,
        BulletPunch,
        BulletSeed,
        CalmMind,
        Camouflage,
        Captivate,
        ChargeBeam,
        Charge,
        Charm,
        Chatter,
        ChipAway,
        CircleThrow,
        Clamp,
        ClearSmog,
        CloseCombat,
        Coil,
        CometPunch,
        ConfuseRay,
        Confusion,
        Constrict,
        Conversion2,
        Conversion,
        Copycat,
        CosmicPower,
        CottonGuard,
        CottonSpore,
        Counter,
        Covet,
        Crabhammer,
        CrossChop,
        CrossPoison,
        Crunch,
        CrushClaw,
        CrushGrip,
        Curse,
        Cut,
        DarkPulse,
        DarkVoid,
        DefendOrder,
        DefenseCurl,
        Defog,
        DestinyBond,
        Detect,
        Dig,
        Disable,
        Discharge,
        Dive,
        DizzyPunch,
        DoomDesire,
        DoubleHit,
        DoubleKick,
        DoubleSlap,
        DoubleTeam,
        DoubleEdge,
        DracoMeteor,
        DragonBreath,
        DragonClaw,
        DragonDance,
        DragonPulse,
        DragonRage,
        DragonRush,
        DragonTail,
        DrainPunch,
        DreamEater,
        DrillPeck,
        DrillRun,
        DualChop,
        DynamicPunch,
        EarthPower,
        Earthquake,
        EchoedVoice,
        EggBomb,
        ElectroBall,
        Electroweb,
        Embargo,
        Ember,
        Encore,
        Endeavor,
        Endure,
        EnergyBall,
        Entrainment,
        Eruption,
        Explosion,
        Extrasensory,
        ExtremeSpeed,
        Facade,
        FakeOut,
        FakeTears,
        FalseSwipe,
        FeatherDance,
        FeintAttack,
        Feint,
        FieryDance,
        FinalGambit,
        FireBlast,
        FireFang,
        FirePledge,
        FirePunch,
        FireSpin,
        Fissure,
        Flail,
        FlameBurst,
        FlameCharge,
        FlameWheel,
        Flamethrower,
        FlareBlitz,
        FlashCannon,
        Flash,
        Flatter,
        Fling,
        Fly,
        FocusBlast,
        FocusEnergy,
        FocusPunch,
        FollowMe,
        ForcePalm,
        Foresight,
        FoulPlay,
        FreezeShock,
        FrenzyPlant,
        FrostBreath,
        Frustration,
        FuryAttack,
        FuryCutter,
        FurySwipes,
        FusionBolt,
        FusionFlare,
        FutureSight,
        GastroAcid,
        GearGrind,
        GigaDrain,
        GigaImpact,
        Glaciate,
        Glare,
        GrassKnot,
        GrassPledge,
        GrassWhistle,
        Gravity,
        Growl,
        Growth,
        Grudge,
        GuardSplit,
        GuardSwap,
        Guillotine,
        GunkShot,
        Gust,
        GyroBall,
        Hail,
        HammerArm,
        Harden,
        Haze,
        HeadCharge,
        HeadSmash,
        Headbutt,
        HealBell,
        HealBlock,
        HealOrder,
        HealPulse,
        HealingWish,
        HeartStamp,
        HeartSwap,
        HeatCrash,
        HeatWave,
        HeavySlam,
        HelpingHand,
        Hex,
        HiddenPower,
        HighJumpKick,
        HoneClaws,
        HornAttack,
        HornDrill,
        HornLeech,
        Howl,
        Hurricane,
        HydroCannon,
        HydroPump,
        HyperBeam,
        HyperFang,
        HyperVoice,
        Hypnosis,
        IceBall,
        IceBeam,
        IceBurn,
        IceFang,
        IcePunch,
        IceShard,
        IcicleCrash,
        IcicleSpear,
        IcyWind,
        Imprison,
        Incinerate,
        Inferno,
        Ingrain,
        IronDefense,
        IronHead,
        IronTail,
        Judgment,
        JumpKick,
        KarateChop,
        Kinesis,
        KnockOff,
        LastResort,
        LavaPlume,
        LeafBlade,
        LeafStorm,
        LeafTornado,
        LeechLife,
        LeechSeed,
        Leer,
        Lick,
        LightScreen,
        LockOn,
        LovelyKiss,
        LowKick,
        LowSweep,
        LuckyChant,
        LunarDance,
        LusterPurge,
        MachPunch,
        MagicCoat,
        MagicRoom,
        MagicalLeaf,
        MagmaStorm,
        MagnetBomb,
        MagnetRise,
        Magnitude,
        MeFirst,
        MeanLook,
        Meditate,
        MegaDrain,
        MegaKick,
        MegaPunch,
        Megahorn,
        Memento,
        MetalBurst,
        MetalClaw,
        MetalSound,
        MeteorMash,
        Metronome,
        MilkDrink,
        Mimic,
        MindReader,
        Minimize,
        MiracleEye,
        MirrorCoat,
        MirrorMove,
        MirrorShot,
        MistBall,
        Mist,
        Moonlight,
        MorningSun,
        MudBomb,
        MudShot,
        MudSport,
        MudSlap,
        MuddyWater,
        NastyPlot,
        NaturalGift,
        NaturePower,
        NeedleArm,
        NightDaze,
        NightShade,
        NightSlash,
        Nightmare,
        Octazooka,
        OdorSleuth,
        OminousWind,
        Outrage,
        Overheat,
        PainSplit,
        PayDay,
        Payback,
        Peck,
        PerishSong,
        PetalDance,
        PinMissile,
        Pluck,
        PoisonFang,
        PoisonGas,
        PoisonJab,
        PoisonPowder,
        PoisonSting,
        PoisonTail,
        Pound,
        PowderSnow,
        PowerGem,
        PowerSplit,
        PowerSwap,
        PowerTrick,
        PowerWhip,
        Present,
        Protect,
        Psybeam,
        PsychUp,
        Psychic,
        PsychoBoost,
        PsychoCut,
        PsychoShift,
        Psyshock,
        Psystrike,
        Psywave,
        Punishment,
        Pursuit,
        Quash,
        QuickAttack,
        QuickGuard,
        QuiverDance,
        RagePowder,
        Rage,
        RainDance,
        RapidSpin,
        RazorLeaf,
        RazorShell,
        RazorWind,
        Recover,
        Recycle,
        ReflectType,
        Reflect,
        Refresh,
        RelicSong,
        Rest,
        Retaliate,
        Return,
        Revenge,
        Reversal,
        RoarOfTime,
        Roar,
        RockBlast,
        RockClimb,
        RockPolish,
        RockSlide,
        RockSmash,
        RockThrow,
        RockTomb,
        RockWrecker,
        RolePlay,
        RollingKick,
        Rollout,
        Roost,
        Round,
        SacredFire,
        SacredSword,
        Safeguard,
        SandAttack,
        SandTomb,
        Sandstorm,
        Scald,
        ScaryFace,
        Scratch,
        Screech,
        SearingShot,
        SecretPower,
        SecretSword,
        SeedBomb,
        SeedFlare,
        SeismicToss,
        SelfDestruct,
        ShadowBall,
        ShadowClaw,
        ShadowForce,
        ShadowPunch,
        ShadowSneak,
        Sharpen,
        SheerCold,
        ShellSmash,
        ShiftGear,
        ShockWave,
        SignalBeam,
        SilverWind,
        SimpleBeam,
        Sing,
        Sketch,
        SkillSwap,
        SkullBash,
        SkyAttack,
        SkyDrop,
        SkyUppercut,
        SlackOff,
        Slam,
        Slash,
        SleepPowder,
        SleepTalk,
        SludgeBomb,
        SludgeWave,
        Sludge,
        SmackDown,
        SmellingSalts,
        Smog,
        Smokescreen,
        Snarl,
        Snatch,
        Snore,
        Soak,
        SoftBoiled,
        SolarBeam,
        SonicBoom,
        SpacialRend,
        Spark,
        SpiderWeb,
        SpikeCannon,
        Spikes,
        SpitUp,
        Spite,
        Splash,
        Spore,
        StealthRock,
        Steamroller,
        SteelWing,
        Stockpile,
        Stomp,
        StoneEdge,
        StoredPower,
        StormThrow,
        Strength,
        StringShot,
        StruggleBug,
        Struggle,
        StunSpore,
        Submission,
        Substitute,
        SuckerPunch,
        SunnyDay,
        SuperFang,
        Superpower,
        Supersonic,
        Surf,
        Swagger,
        Swallow,
        SweetKiss,
        SweetScent,
        Swift,
        Switcheroo,
        SwordsDance,
        Synchronoise,
        Synthesis,
        Tackle,
        TailGlow,
        TailSlap,
        TailWhip,
        Tailwind,
        TakeDown,
        Taunt,
        TechnoBlast,
        TeeterDance,
        Telekinesis,
        Teleport,
        Thief,
        Thrash,
        ThunderFang,
        ThunderPunch,
        ThunderShock,
        ThunderWave,
        Thunder,
        Thunderbolt,
        Tickle,
        Torment,
        ToxicSpikes,
        Toxic,
        Transform,
        TriAttack,
        TrickRoom,
        Trick,
        TripleKick,
        TrumpCard,
        Twineedle,
        Twister,
        UTurn,
        Uproar,
        VCreate,
        VacuumWave,
        Venoshock,
        ViceGrip,
        VineWhip,
        VitalThrow,
        VoltSwitch,
        VoltTackle,
        WakeUpSlap,
        WaterGun,
        WaterPledge,
        WaterPulse,
        WaterSport,
        WaterSpout,
        Waterfall,
        WeatherBall,
        Whirlpool,
        Whirlwind,
        WideGuard,
        WildCharge,
        WillOWisp,
        WingAttack,
        Wish,
        Withdraw,
        WonderRoom,
        WoodHammer,
        WorkUp,
        WorrySeed,
        Wrap,
        WringOut,
        XScissor,
        Yawn,
        ZapCannon,
        ZenHeadbutt,
        // Generation 6
        AromaticMist,
        BabyDollEyes,
        Belch,
        Boomburst,
        Celebrate,
        Confide,
        CraftyShield,
        DazzlingGleam,
        DiamondStorm,
        DisarmingVoice,
        DragonAscent,
        DrainingKiss,
        EerieImpulse,
        ElectricTerrain,
        Electrify,
        FairyLock,
        FairyWind,
        FellStinger,
        FlowerShield,
        FlyingPress,
        ForestsCurse,
        FreezeDry,
        Geomancy,
        GrassyTerrain,
        HappyHour,
        HoldBack,
        HoldHands,
        HyperspaceFury,
        HyperspaceHole,
        Infestation,
        IonDeluge,
        KingsShield,
        LandsWrath,
        LightOfRuin,
        MagneticFlux,
        MatBlock,
        MistyTerrain,
        Moonblast,
        MysticalFire,
        NobleRoar,
        Nuzzle,
        OblivionWing,
        OriginPulse,
        ParabolicCharge,
        PartingShot,
        PetalBlizzard,
        PhantomForce,
        PlayNice,
        PlayRough,
        Powder,
        PowerUpPunch,
        PrecipiceBlades,
        Rototiller,
        SpikyShield,
        SteamEruption,
        StickyWeb,
        ThousandArrows,
        ThousandWaves,
        TopsyTurvy,
        TrickOrTreat,
        VenomDrench,
        WaterShuriken,
        // Generation 7
        Accelerock,
        AnchorShot,
        AuroraVeil,
        BanefulBunker,
        BeakBlast,
        BrutalSwing,
        BurnUp,
        ClangingScales,
        CoreEnforcer,
        DarkestLariat,
        DoubleIronBash,
        DragonHammer,
        FireLash,
        FirstImpression,
        FleurCannon,
        FloralHealing,
        GearUp,
        HighHorsepower,
        IceHammer,
        Instruct,
        LaserFocus,
        Leafage,
        Liquidation,
        Lunge,
        MindBlown,
        MoongeistBeam,
        MultiAttack,
        NaturesMadness,
        PhotonGeyser,
        PlasmaFists,
        PollenPuff,
        PowerTrip,
        PrismaticLaser,
        PsychicFangs,
        PsychicTerrain,
        Purify,
        RevelationDance,
        ShadowBone,
        ShellTrap,
        ShoreUp,
        SmartStrike,
        SolarBlade,
        SparklingAria,
        SpectralThief,
        SpeedSwap,
        SpiritShackle,
        Spotlight,
        StompingTantrum,
        StrengthSap,
        SunsteelStrike,
        TearfulLook,
        ThroatChop,
        ToxicThread,
        TropKick,
        ZingZap

    }

    public enum DamageCategories
    {
        None,
        Physical,
        Special,
        Status
    }

    public enum Targets
    {
        None,
        User,
        NearAlly,
        UserOrNearAlly,
        UserAndAllies,
        NearFoe,
        AllNearFoes,
        RandomNearFoe,
        Foe,
        AllFoes,
        NearOther,
        AllNearOthers,
        Other,
        AllBattlers,
        UserSide,
        FoeSide,
        BothSides
    }

    #endregion


    #region Structs

    [Serializable]
    public struct MoveFlags
    {
        public bool makes_physical_contact;
        public bool can_protect_against;
        public bool magic_coat_can_reflect;
        public bool snatch_can_steal;
        public bool mirror_move_can_copy;
        public bool damage_no_flinch_chance;
        public bool thaws_if_frozen;
        public bool is_biting;
        public bool has_high_crit_rate;
        public bool is_punching;
        public bool is_sound_based;
        public bool is_powder_based;
        public bool is_pulse_based;
        public bool is_bomb_based;
        public bool is_dance;
    }

    [Serializable]
    public struct MoveSlot
    {
        public Moves move;
        public string name;
        public int remaining_PP;
        public int PP_ups;
        public Types type;
        public int total_pp;
    }

    #endregion

    [CreateAssetMenu(fileName = "Move", menuName = "Pokemon/Move")]
    public class Move: ScriptableObject
    {
        #region Constants

        private static readonly string MOVE_INFO_NA_TEXT = "--";

        #endregion


        #region Fields

        public static Dictionary<Moves, Move> moves;

        #endregion


        #region Scriptable Object

        public string description;
        public MoveEffects move_effect;
        public int base_power;
        public Types type;
        public DamageCategories damage_category;
        public int accuracy;
        public int total_pp;
        public int effect_chance;
        public Targets target;
        public int priority;
        public MoveFlags move_flags;

        #endregion


        #region Move Methods

        public string GetBasePowerText()
        {
            if (base_power == 0)
                return MOVE_INFO_NA_TEXT;
            else return base_power.ToString();
        }

        public string GetAccuracyText()
        {
            if (accuracy == 0)
                return MOVE_INFO_NA_TEXT;
            else return accuracy.ToString();
        }

        #endregion


        #region Static Methods

        public static MoveSlot[] GeneratePokemonMoveSlots(LevelUpMove[] move_list, uint level)
        {
            MoveSlot[] moves = new MoveSlot[4];

            // Set moves
            for (int i = 0; i < move_list.Length; i++)
            {
                LevelUpMove new_move = move_list[i];
                if (new_move.level <= level && moves[0].move != new_move.move
                    && moves[1].move != new_move.move && moves[2].move != new_move.move && moves[3].move != new_move.move)
                    moves[i % 4].move = new_move.move;
                else if (new_move.level > level)
                    break;
            }

            // Fill out move slot info
            for (int i = 0; i < Constants.NUM_MOVES; i++)
            {
                if (moves[i].move != Moves.None)
                {
                    Move move_data = Move.moves[moves[i].move];

                    moves[i].name = move_data.name;
                    moves[i].remaining_PP = move_data.total_pp;
                    moves[i].PP_ups = 0;
                    moves[i].type = move_data.type;
                    moves[i].total_pp = move_data.total_pp;
                }
            }

            return moves;
        }

        #endregion

    }
}